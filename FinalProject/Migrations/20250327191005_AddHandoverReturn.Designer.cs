// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(CompanyAssetManagementContext))]
    [Migration("20250327191005_AddHandoverReturn")]
    partial class AddHandoverReturn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__AppRoles__3214EC07D250C7FA");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__AppUsers__3214EC07D250C7FA");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("FinalProject.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssetCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Assets__3214EC07670D2D82");

                    b.HasIndex("AssetCategoryId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("FinalProject.Models.AssetCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__AssetCat__3214EC07D7F87C44");

                    b.ToTable("AssetCategories");
                });

            modelBuilder.Entity("FinalProject.Models.BorrowTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<int?>("BorrowById")
                        .HasColumnType("int");

                    b.Property<int>("BorrowedAssetStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtensionApproveStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ExtensionBorrowTicketId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExtensionRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsExtended")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseAssetId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__BorrowTi__3214EC079484E399");

                    b.HasIndex("BorrowById");

                    b.HasIndex("ExtensionBorrowTicketId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WarehouseAssetId");

                    b.ToTable("BorrowTickets");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Departme__3214EC07F78AE89E");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("FinalProject.Models.DisposalTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisposalById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Disposal__3214EC07A33255BB");

                    b.HasIndex("DisposalById");

                    b.HasIndex("OwnerId");

                    b.ToTable("DisposalTickets");
                });

            modelBuilder.Entity("FinalProject.Models.DisposalTicketAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisposalTicketId")
                        .HasColumnType("int");

                    b.Property<double?>("DisposedPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseAssetId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Disposal__3214EC077EA7A1E4");

                    b.HasIndex("DisposalTicketId");

                    b.HasIndex("WarehouseAssetId");

                    b.ToTable("DisposalTicketAssets");
                });

            modelBuilder.Entity("FinalProject.Models.HandoverTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentCondition")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HandoverById")
                        .HasColumnType("int");

                    b.Property<int?>("HandoverToId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseAssetId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Handover__3214EC07861FC02F");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HandoverById");

                    b.HasIndex("HandoverToId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WarehouseAssetId");

                    b.ToTable("HandoverTickets");
                });

            modelBuilder.Entity("FinalProject.Models.ReturnTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<int>("AssetConditionOnReturn")
                        .HasColumnType("int");

                    b.Property<int?>("BorrowTicketId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEarlyReturn")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ReturnById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnRequestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ReturnTi__3214EC0769D136BF");

                    b.HasIndex("BorrowTicketId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ReturnById");

                    b.ToTable("ReturnTickets");
                });

            modelBuilder.Entity("FinalProject.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Warehous__3214EC073C957F29");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("FinalProject.Models.WarehouseAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<int?>("BorrowedGoodQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("BrokenQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisposedQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("FixingQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("GoodQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("HandedOverGoodQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Warehous__3214EC07DC3A910A");

                    b.HasIndex("AssetId");

                    b.HasIndex(new[] { "WarehouseId", "AssetId" }, "UQ__Warehous__123C3DCDB02651C6")
                        .IsUnique()
                        .HasFilter("[WarehouseId] IS NOT NULL AND [AssetId] IS NOT NULL");

                    b.ToTable("WarehouseAssets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppUser", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("AppUsers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AppRole", "Role")
                        .WithMany("AppUsers")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinalProject.Models.Asset", b =>
                {
                    b.HasOne("FinalProject.Models.AssetCategory", "AssetCategory")
                        .WithMany("Assets")
                        .HasForeignKey("AssetCategoryId");

                    b.Navigation("AssetCategory");
                });

            modelBuilder.Entity("FinalProject.Models.BorrowTicket", b =>
                {
                    b.HasOne("AppUser", "BorrowBy")
                        .WithMany("BorrowTicketBorrowBies")
                        .HasForeignKey("BorrowById");

                    b.HasOne("FinalProject.Models.BorrowTicket", "OriginalBorrowTicket")
                        .WithMany("ExtendedBorrowTickets")
                        .HasForeignKey("ExtensionBorrowTicketId");

                    b.HasOne("AppUser", "Owner")
                        .WithMany("BorrowTicketOwners")
                        .HasForeignKey("OwnerId");

                    b.HasOne("FinalProject.Models.WarehouseAsset", "WarehouseAsset")
                        .WithMany("BorrowTickets")
                        .HasForeignKey("WarehouseAssetId");

                    b.Navigation("BorrowBy");

                    b.Navigation("OriginalBorrowTicket");

                    b.Navigation("Owner");

                    b.Navigation("WarehouseAsset");
                });

            modelBuilder.Entity("FinalProject.Models.DisposalTicket", b =>
                {
                    b.HasOne("AppUser", "DisposalBy")
                        .WithMany("DisposalTicketDisposalBies")
                        .HasForeignKey("DisposalById");

                    b.HasOne("AppUser", "Owner")
                        .WithMany("DisposalTicketOwners")
                        .HasForeignKey("OwnerId");

                    b.Navigation("DisposalBy");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FinalProject.Models.DisposalTicketAsset", b =>
                {
                    b.HasOne("FinalProject.Models.DisposalTicket", "DisposalTicket")
                        .WithMany("DisposalTicketAssets")
                        .HasForeignKey("DisposalTicketId");

                    b.HasOne("FinalProject.Models.WarehouseAsset", "WarehouseAsset")
                        .WithMany("DisposalTicketAssets")
                        .HasForeignKey("WarehouseAssetId");

                    b.Navigation("DisposalTicket");

                    b.Navigation("WarehouseAsset");
                });

            modelBuilder.Entity("FinalProject.Models.HandoverTicket", b =>
                {
                    b.HasOne("FinalProject.Models.Department", "Department")
                        .WithMany("HandoverTickets")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AppUser", "HandoverBy")
                        .WithMany("HandoverTicketHandoverBies")
                        .HasForeignKey("HandoverById");

                    b.HasOne("AppUser", "HandoverTo")
                        .WithMany("HandoverTicketHandoverTos")
                        .HasForeignKey("HandoverToId");

                    b.HasOne("AppUser", "Owner")
                        .WithMany("HandoverTicketOwners")
                        .HasForeignKey("OwnerId");

                    b.HasOne("FinalProject.Models.WarehouseAsset", "WarehouseAsset")
                        .WithMany("HandoverTickets")
                        .HasForeignKey("WarehouseAssetId");

                    b.Navigation("Department");

                    b.Navigation("HandoverBy");

                    b.Navigation("HandoverTo");

                    b.Navigation("Owner");

                    b.Navigation("WarehouseAsset");
                });

            modelBuilder.Entity("FinalProject.Models.ReturnTicket", b =>
                {
                    b.HasOne("FinalProject.Models.BorrowTicket", "BorrowTicket")
                        .WithMany("ReturnTickets")
                        .HasForeignKey("BorrowTicketId");

                    b.HasOne("AppUser", "Owner")
                        .WithMany("ReturnTicketOwners")
                        .HasForeignKey("OwnerId");

                    b.HasOne("AppUser", "ReturnBy")
                        .WithMany("ReturnTicketReturnBies")
                        .HasForeignKey("ReturnById");

                    b.Navigation("BorrowTicket");

                    b.Navigation("Owner");

                    b.Navigation("ReturnBy");
                });

            modelBuilder.Entity("FinalProject.Models.WarehouseAsset", b =>
                {
                    b.HasOne("FinalProject.Models.Asset", "Asset")
                        .WithMany("WarehouseAssets")
                        .HasForeignKey("AssetId");

                    b.HasOne("FinalProject.Models.Warehouse", "Warehouse")
                        .WithMany("WarehouseAssets")
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Asset");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppRole", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("AppUser", b =>
                {
                    b.Navigation("BorrowTicketBorrowBies");

                    b.Navigation("BorrowTicketOwners");

                    b.Navigation("DisposalTicketDisposalBies");

                    b.Navigation("DisposalTicketOwners");

                    b.Navigation("HandoverTicketHandoverBies");

                    b.Navigation("HandoverTicketHandoverTos");

                    b.Navigation("HandoverTicketOwners");

                    b.Navigation("ReturnTicketOwners");

                    b.Navigation("ReturnTicketReturnBies");
                });

            modelBuilder.Entity("FinalProject.Models.Asset", b =>
                {
                    b.Navigation("WarehouseAssets");
                });

            modelBuilder.Entity("FinalProject.Models.AssetCategory", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("FinalProject.Models.BorrowTicket", b =>
                {
                    b.Navigation("ExtendedBorrowTickets");

                    b.Navigation("ReturnTickets");
                });

            modelBuilder.Entity("FinalProject.Models.Department", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("HandoverTickets");
                });

            modelBuilder.Entity("FinalProject.Models.DisposalTicket", b =>
                {
                    b.Navigation("DisposalTicketAssets");
                });

            modelBuilder.Entity("FinalProject.Models.Warehouse", b =>
                {
                    b.Navigation("WarehouseAssets");
                });

            modelBuilder.Entity("FinalProject.Models.WarehouseAsset", b =>
                {
                    b.Navigation("BorrowTickets");

                    b.Navigation("DisposalTicketAssets");

                    b.Navigation("HandoverTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
