@model FinalProject.Models.ManagerReturnRequest
@using FinalProject.Enums
@{
    ViewData["Title"] = "Chi tiết yêu cầu trả tài sản từ quản lý";
    Layout = "_GeneralUserLayout";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-12">
            <h2><i class="fas fa-info-circle"></i> Chi tiết yêu cầu trả tài sản</h2>
        </div>
    </div>

    <!-- Notifications -->
    <partial name="_NotificationPartial" />

    <div class="row">
        <div class="col-md-8">
            <!-- Thông tin yêu cầu trả tài sản -->
            <div class="card shadow mb-4">
                <div class="card-header bg-danger text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-file-alt"></i> Thông tin yêu cầu trả tài sản</h5>
                    <span class="badge @GetStatusBadgeClass(Model.Status)">
                        @GetStatusText(Model.Status)
                    </span>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Mã yêu cầu:</dt>
                        <dd class="col-sm-8">@Model.Id</dd>

                        <dt class="col-sm-4">Người yêu cầu trả:</dt>
                        <dd class="col-sm-8">@Model.RequestedBy.FullName</dd>

                        <dt class="col-sm-4">Ngày tạo yêu cầu:</dt>
                        <dd class="col-sm-8">@(Model.DateCreated?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</dd>

                        <dt class="col-sm-4">Thời hạn trả:</dt>
                        <dd class="col-sm-8">
                            @{
                                var daysLeft = (Model.DueDate - DateTime.Now).Days;
                                var isUrgent = daysLeft <= 3;
                            }
                            @Model.DueDate.ToString("dd/MM/yyyy")
                            @if (daysLeft < 0)
                            {
                                <span class="badge bg-danger ms-2">Quá hạn @Math.Abs(daysLeft) ngày</span>
                            }
                            else if (daysLeft == 0)
                            {
                                <span class="badge bg-danger ms-2">Hôm nay</span>
                            }
                            else
                            {
                                <span class="badge @(isUrgent ? "bg-danger" : "bg-warning") ms-2">Còn @daysLeft ngày</span>
                            }
                        </dd>

                        <dt class="col-sm-4">Lý do yêu cầu trả:</dt>
                        <dd class="col-sm-8">
                            @if (string.IsNullOrEmpty(Model.Reason))
                            {
                                <span>Không có ghi chú</span>
                            }
                            else
                            {
                                <pre class="note-pre">@Model.Reason</pre>
                            }
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <!-- Thông tin tài sản -->
            <div class="card shadow mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-box"></i> Thông tin tài sản</h5>
                </div>
                <div class="card-body">
                    <dl>
                        <dt>Tên tài sản:</dt>
                        <dd>@(Model.BorrowTicket?.WarehouseAsset?.Asset?.Name ?? "N/A")</dd>

                        <dt>Danh mục:</dt>
                        <dd>@(Model.BorrowTicket?.WarehouseAsset?.Asset?.AssetCategory?.Name ?? "N/A")</dd>

                        <dt>Kho xuất:</dt>
                        <dd>@(Model.BorrowTicket?.WarehouseAsset?.Warehouse?.Name ?? "N/A")</dd>

                        <dt>Số lượng mượn:</dt>
                        <dd>@Model.BorrowTicket?.Quantity</dd>
                    </dl>
                </div>
            </div>

            <!-- Thông tin phiếu mượn -->
            <div class="card shadow mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-clipboard-list"></i> Thông tin phiếu mượn</h5>
                </div>
                <div class="card-body">
                    <dl>
                        <dt>Mã phiếu mượn:</dt>
                        <dd>
                            <a asp-controller="BorrowRequest" asp-action="Details" asp-route-id="@Model.BorrowTicketId">
                                #@Model.BorrowTicketId
                            </a>
                        </dd>

                        <dt>Ngày mượn:</dt>
                        <dd>@(Model.BorrowTicket?.DateCreated?.ToString("dd/MM/yyyy") ?? "N/A")</dd>

                        <dt>Ngày hẹn trả (ban đầu):</dt>
                        <dd>@(Model.BorrowTicket?.ReturnDate?.ToString("dd/MM/yyyy") ?? "N/A")</dd>
                    </dl>
                </div>
            </div>

            <!-- Actions -->
            <div class="card shadow">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0"><i class="fas fa-cogs"></i> Thao tác</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a asp-action="ProcessManagerReturn" asp-route-id="@Model.Id" class="btn btn-success">
                            <i class="fas fa-undo-alt"></i> Trả tài sản
                        </a>
                        <a asp-action="ManagerReturnRequests" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Quay lại danh sách
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .note-pre {
        white-space: pre-wrap;
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #dee2e6;
        max-height: 200px;
        overflow-y: auto;
    }
</style>

@functions {
    public string GetStatusBadgeClass(TicketStatus status)
    {
        return status switch
        {
            TicketStatus.Approved => "bg-success",
            TicketStatus.Pending => "bg-warning",
            TicketStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }

    public string GetStatusText(TicketStatus status)
    {
        return status switch
        {
            TicketStatus.Approved => "Đã hoàn thành",
            TicketStatus.Pending => "Chờ xử lý",
            TicketStatus.Rejected => "Từ chối",
            _ => "Không xác định"
        };
    }
}